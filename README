bash-3.2$ echo 21221015766709 | seluser -iB -oU | dumpflatuser
Symphony $<user> $<selection> 3.4.1 $<started_on> $<tuesday:u>, $<july:u> 10, 2012, 10:34 AM
Symphony $<print:u> $<user:u> 3.4.1 $<started_on> $<tuesday:u>, $<july:u> 10, 2012, 10:34 AM
$(1492)
$(1238)
  1 $<user> $(1308)
  1 $<user> $(1309)
Symphony $<user> $<selection> $<finished_on> $<tuesday:u>, $<july:u> 10, 2012, 10:34 AM
$(1228)
$(11553)
*** DOCUMENT BOUNDARY ***
.USER_ID.   |a21221015766709
.USER_GROUP_ID.   |aBALZAC
.USER_NAME.   |aILS Test Card - See ILS Team ITS Milner DO NOT DELETE
.USER_LAST_NAME.   |aILS Test Card - See ILS Team ITS Milner DO NOT DELETE
.USER_NAME_DSP_PREF.   |a0
.USER_LIBRARY.   |aEPLMNA
.USER_PROFILE.   |aEPL-STAFF
.USER_PREF_LANG.   |aENGLISH
.USER_PIN.   |a4058
.USER_STATUS.   |aOK
.USER_ROUTING_FLAG.   |aY
.USER_CHG_HIST_RULE.   |aALLCHARGES
.USER_LAST_ACTIVITY.   |a20120405
.USER_PRIV_GRANTED.   |a20111129
.USER_PRIV_EXPIRES.   |a20120416
.USER_BIRTH_DATE.   |a19691231
.USER_CATEGORY1.   |aEPL12NEW
.USER_ACCESS.   |aPUBLIC
.USER_ENVIRONMENT.   |aPUBLIC
.USER_MAILINGADDR.   |a1
.USER_ADDR1_BEGIN.
.CITY/STATE. |aEdmonton, AB
.PHONE. |a780-496-4058
.EMAIL. |aILSTeam@epl.ca
.USER_ADDR1_END.
.USER_ADDR2_BEGIN.
.USER_ADDR2_END.
.USER_ADDR3_BEGIN.
.EMAIL. |atest
.EMAIL. |acstoddart@epl.ca
.EMAIL. |apuzzle
.USER_ADDR3_END.
.USER_XINFO_BEGIN.
.NOTIFY_VIA. |aPHONE
.NOTE. |aTEST ILS CARD - DO NOT DELETE!
.USER_XINFO_END.
  1 $<user> $(1303)
Symphony $<print:u> $<user:u> $<finished_on> $<tuesday:u>, $<july:u> 10, 2012, 10:34 AM





Here is how Chris uses edituser:

bash-3.2$ seluser -\?"ALLCHARGES" -p"~EPL-LAD" -oUB\?ypD > /s/sirsi/Unicorn/EPLwork/cronjobscripts/CIRCRULE.lst
bash-3.2$ seluser -x
Symphony $<user> $<selection> 3.4.1 $<started_on> $<tuesday:u>, $<july:u> 10, 2012, 10:53 AM
  Seluser selects from user file using standard input.
  -a selects users whose last activity was before (<), on (=), or after (>)
     the specified date.
  --age selects users whose age is less than (<), equal to (=) or greater
     than (>) the number specified.
  -b selects users who have less than (<), equal to (=) or greater
     than (>) the number of bills specified.
  -c selects users who have less than (<), equal to (=) or greater
     than (>) the number of charges specified.
  -d selects users in the specified department(s).
  -e selects users whose privilege expires before (<), on (=), or after (>)
     the specified date.
  -f selects users who were first created before (<), on (=), or after (>)
     the specified date.
  -g selects users whose privilege was granted before (<), on (=), or after (>)
     the specified date.
  -h selects users who have less than (<), equal to (=) or greater
     than (>) the number of holds specified.
  -iA considers all users with partial names read from standard input.
    B considers all users with user IDs read from standard input.
    E considers all users with alternative ids read from standard input.
    G considers all users with group IDs read from standard input.
    J considers all users with encoded user keys read from standard input.
    S (default) considers all users in user key order.
    K considers users with user keys read from standard input.
    U considers users with user keys read from standard input.
    x considers all users with web authentication IDs read from standard input.
  -k has multiple policy options [ailnov].  It selects users based on what
     the specified responsibility codes(s) are.
  -m selects users who have less than (<), equal to (=) or greater
     than (>) the number of total bills specified.
  -n selects users who have less than (<), equal to (=) or greater
     than (>) the number of total charges specified.
  -o has multiple options. Options determine what is written to standard output.
     Output is in the same order as options.
     In addition to the options listed below, any field which can be selected
     can be output using the same letter as is used for selection.
    j writes selected users' specified entry types' mailing address entry to standard output.
    l writes selected users' location to standard output.
    A writes selected users' name key to standard output.
    B writes selected users' id to standard output.
    D writes selected users' name to standard output.
    E writes selected users' alternative key to standard output.
    G writes selected users' group ID to standard output.
    J writes selected users' encoded user key to standard output.
    K (default) writes selected users' user key to standard output.
    M writes selected users' mailing address character to standard output.
    P writes selected users' user access to standard output.
    Q writes selected users' environment to standard output.
    S writes selected users' input strings to standard output.
    U writes selected users' user key to standard output.
    V writes selected users' specified mailing address entry to standard output.
    W writes selected users' specified extended info entry to standard output.
    X writes selected users' specified address 1 entry to standard output.
    Y writes selected users' specified address 2 entry to standard output.
    Z writes selected users' specified address 3 entry to standard output.
    x writes selected users' web authentication id to standard output.
  -p has multiple policy options [ailnov].  It selects users based on what
     the specified profile(s) are.
  --pref_lang= has multiple policy options [ailnov].  It selects users based on what
     the specified prefered language(s) are.
  -q has multiple policy options [ailnov].  It selects users based on what
     the specified category1(s) are.
  -r has multiple policy options [ailnov].  It selects users based on what
     the specified category2(s) are.
  -s selects users whose birth date is before (<), equal to (=), or after (>)
     the specified date.
  -t selects users with specified title.
  -u has multiple policy options [ailnov].  It selects users based on what
     the specified category3(s) are.
  -v has multiple policy options [ailnov].  It selects users based on the
     number of charge history records.
  -w selects users with specified PIN.
  -y has multiple policy options [ailnov].  It selects users based on what
     the specified library(s) are.
  -z selects users who have less than (<), equal to (=) or greater
     than (>) the number of available holds specified.
  -0 has multiple policy options [ailnov].  It selects users based on what
     the specified category4(s) are.
  -1 selects users who have less than (<), equal to (=) or greater
     than (>) the number of reserves specified.
  -2 selects users who have less than (<), equal to (=) or greater than (>)
     the specified accountability.
  -3 selects users who have less than (<), equal to (=) or greater
     than (>) the number of routings specified.
  -4 selects users who have less than (<), equal to (=) or greater
     than (>) the number of bookings specified.
  -5 selects users who have less than (<), equal to (=) or greater
     than (>) the number of open orders specified.
  -6 selects users who have less than (<), equal to (=) or greater
     than (>) the number of claims_returned specified.
  -7 selects users who have less than (<), equal to (=) or greater
     than (>) the number of lost items specified.
  -8 has multiple policy options [ailnov].  It selects users based on what
     the specified category5(s) are.
  -9 selects users who have less than (<), equal to (=) or greater
     than (>) the number of open distributions specified.
  -C selects users who have less than (<), equal to (=) or greater than (>)
     the number of reserve charges specified.
  -E determines if an empty entry field matches when "not equals" is
     used.  m (default) will match, n will not match.
  -F selects users whose routing is active (=1) or not active (=0).
  -H selects users with outreach user (=1) or without outreach user (=0).
  -I selects users with address 1 offset less than (<), equal to (=), or
     greater than (>) the specified value.
  -L selects users who have less than (<), equal to (=) or greater
     than (>) the number of unanswered requests specified.
  -N selects users with address 3 offset less than (<), equal to (=), or
     greater than (>) the specified value.
  -O selects users who have less than (<), equal to (=) or greater than (>)
     the number of charges allowed.
  -R selects users with extended information offsets less than (<),
     equal to (=), or greater than (>) the specified number.
  -T selects users with address 2 offset less than (<), equal to (=), or
     greater than (>) the specified value.
  -W selects users with the specified extended info ved entry data
  -X selects users with the specified address ved entry data
     Ved usage: "^f1^f2^f3^f4", where
       f1 is the entry ID,
       f2 is 0 for all occurrences of that entry ID, or 'n' for the nth only,
       f3 is the search operator (=, >, <, ~, or @ (subphrase searching)),
       f4 is the value to search for.
     Ved Address usage: "^f1^f2^f3^f4^f5", where
       f1 is 0 for all addresses, or 1, 2, or 3, for that address number,
       f2 is the entry ID,
       f3 is 0 for all occurrences of that entry ID, or 'n' for the nth only,
       f4 is the search operator (=, >, <, ~, or @ (subphrase searching)),
       f5 is the value to search for.
  -! reverses the selection criteria, e.g., selects users which do not
     match the selection criteria.(Disabled on sql for -W and -X only)
  -@ selects user records with less than (<), more than (>), or (=) the
     specified status.
  -? has multiple policy options [ailnov]. It selects users based on what
     the specified charge history rules are.
  -+ selects user records by usergroup default key.
  --first_name     selects users with specified first name.
  --middle_name    selects users with specified middle name.
  --last_name      selects users with specified last name.
  --suffix         selects users with specified suffix.
  --preferred_name selects users with specified preferred name.
  --name_display_preference  selects users who have less than (<), equal to (=) or greater
     than (>) the number of name_display_preference specified.

  The Policy Selection Options.
     a selects records with any policy codes(s).
     i selects records with invalid policy codes(s).
     l selects records with the specified policy codes(s), but when
       excluded it doesn't include invalid or missing policies.
     n selects records with NO policy codes.
     o selects records with the specified policy codes(s), but on
       exclude it does include the invalid and missing policies.
     v selects records with valid policy codes(s).
  If policy option is missing, it assumes option 'o'.
**Invalid argument -x
  0 $<user> $(1308)
  0 $<user> $(1309)
Symphony $<user> $<selection> $<finished_on> $<tuesday:u>, $<july:u> 10, 2012, 10:53 AM



bash-3.2$ less CIRCRULE.lst
UserKey|Barcode       |ChargeHist Selection|Library|Profile  |Name           |
177    |21221018090248|ALLCHARGES          |EPLMLW |EPL-THREE|Solash, Valerie|
179|21221000001310|ALLCHARGES|EPLUAC|EPL-ADULT|Reichardt, Randy|
181|21221000002151|ALLCHARGES|EPLHIG|EPL-THREE|VanPopta, Gezina|
182|21221008886985|ALLCHARGES|EPLMNA|EPL-ADULT|Mount, John|
187|21221000003670|ALLCHARGES|EPLMNA|EPL-ADULT|Pope, Gordon|
197|21221000005493|ALLCHARGES|EPLMNA|EPL-ADULT|Berry, Patricia|
198|21221000005899|ALLCHARGES|EPLIDY|EPL-ADULT|Drews, Elizabeth|
201|21221000006087|ALLCHARGES|EPLMNA|EPL-THREE|Mitchell, Robert J|
210|21221008403724|ALLCHARGES|EPLLON|EPL-ADULT|Mah, Polly O|
212|21221019161402|ALLCHARGES|EPLMNA|EPL-ADULT|Kowal, Martha|
213|21221000010303|ALLCHARGES|EPLMNA|EPL-ADULT|Fedoruk, Louise|
219|21221019811014|ALLCHARGES|EPLMLW|EPL-ADULT|Tumm, Eva E|
227|21221013749517|ALLCHARGES|EPLHIG|EPL-THREE|Wall, Kathleen|
231|21221014050972|ALLCHARGES|EPLLHL|EPL-THREE|Banks, Shelly|
232|21221000017035|ALLCHARGES|EPLMNA|EPL-ADULT|Spenrath, Silja V|
235|21221000017761|ALLCHARGES|EPLIDY|EPL-ADULT|Stelter, Warren N|
241|21221000019742|ALLCHARGES|EPLMNA|EPL-ADULT|Manning, Darrell G|
247|21221000021086|ALLCHARGES|EPLMNA|EPL-ADULT|Stolte, Arend|
256|21221014903501|ALLCHARGES|EPLMNA|EPL-ADULT|Huculak, Larry|
258|21221011154983|ALLCHARGES|EPLMNA|EPL-ADULT|Burek, Joanne|
263|21221000024767|ALLCHARGES|EPLMNA|EPL-THREE|Van Bakel, Robert|
264|21221000024817|ALLCHARGES|EPLMNA|EPL-THREE|VAN BAKEL, Margaret|
266|21221000024833|ALLCHARGES|EPLMNA|EPL-ADULT|Otto, Connie|
267|21221000024916|ALLCHARGES|EPLLON|EPL-THREE|Pylypow, James P|
273|21221000025145|ALLCHARGES|EPLLON|EPL-THREE|Dixon, Douglas M|
275|21221018583077|ALLCHARGES|EPLCSD|EPL-ADULT|Tam, Joseph|
277|21221019140786|ALLCHARGES|EPLMNA|EPL-ADULT|Makovichuk, Robert|
...

which he then cats into edituser like so:
cat /s/sirsi/Unicorn/EPLwork/cronjobscripts/CIRCRULE.lst | edituser -X"CIRCRULE" -8"ADMIN|PCGUI-DISP"

so does this work:
echo 21221015766709 | seluser -iB -oU | edituser -X"NOTE" -8"ADMIN|PCGUI-DISP"


This is from Jim Hamilton:

Hi Andrew,

Attached is the script i was discussing but I don't recommend it for your purposes. This script uses transactions 
which are probably unnecessarily complicated when there are easier ways. Transactions are a last resort.

After you have your records you wish to correct, build a script like the one below that will produce an input 
file and use loadflatusers (or run Loadusers in Workflows) to overlay your corrections. I can provide more detail if you wish.

Jim

#!/usr/bin/perl

if ($#ARGV != 1) {die "$0 requires 2 arguments.\n";}
open(IN,"$ARGV[0]") || die "Can't open $ARGV[0]: $!";
open(OUT,">$ARGV[1]") || die "Can't open $ARGV[1]: $!";

## Read Selected Records and build the format for Workflows Loadusers ####

$recnum = 0;
while ($line=<IN>)
  {
  $recnum++;
  chomp($line);

  ($user_id, $user_alt_id) = split(/\|/,$line);


  if ($user_alt_id !~ /^B00/)
    {
    next;
    }

  print OUT "*** DOCUMENT BOUNDARY ***\n";
  print OUT "FORM=LDUSER\n";
  print OUT ".USER_ID.  |a$user_id\n";
  print OUT ".USER_ALT_ID.   |a$user_alt_id\n";
  print OUT ".USER_ADDR2_BEGIN.\n";
  print OUT ".ADDRESS.   |a\n";
  print OUT ".LINE2.   |a\n";
  print OUT ".LINE3.   |a\n";
  print OUT ".CITY/PROV.   |a\n";
  print OUT ".POSTALCODE.   |a\n";
  print OUT ".COUNTRY.   |a\n";
  print OUT ".USER_ADDR2_END.\n";
  }

close(OUT);
close(IN);

print "Total records  = $recnum\n";


======================================================
echo "ilsteam@epl.ca {EMAIL}" | selusertext | dumpflatuser

Here is another approach from Chris's hints page:
echo "403124|Invalid address def@abc.com|" | edituserved -b -eNOTE -l"ADMIN|PCGUI-DISP" -tx

but it returns:
Symphony $<edit:u> $<VED> $<data_in> $<user> $<record> 3.4.1 $<started_on> $<thursday:u>, $<july:u> 12, 2012, 9:08 AM
$(4477)
$(4478)
$(4481)
$(1217)ADMIN|PCGUI-DISP.
$(4482)Extended Information.
$(4483)NOTE.
**UNABLE TO COMPLETE REQUEST  user id: 403124
  1 $<input> $(1402)
  0 $<user> $(1416)
  0 $<user> $(1302)
  1 $(1408)
Symphony $<edit:u> $<VED> $<data_in> $<user> $<record> $<finished_on> $<thursday:u>, $<july:u> 12, 2012, 9:09 AM

Here is another example of accessing the VED data on a user:
echo 21221012345678 | seluser -iB -oUBDwV.9007.V.9998.
which produces:
301585|21221012345678|Billy, Balzac|64058|ilsteam@epl.ca||




Finally!! this works:
cat edit.in | edituserved -b -ePHONE -l"ADMIN|PCGUI-DISP" -t1 >edit.out 2>edit.err
where edit.in is:
21221012345678|334-299-4500|

bash-3.00$ echo 301585 |  dumpflatuser
Symphony $<print:u> $<user:u> 3.4 $<started_on> $<thursday:u>, $<july:u> 12, 2012, 12:48 PM
$(1228)
$(11553)
*** DOCUMENT BOUNDARY ***
.USER_ID.   |a21221012345678
.USER_GROUP_ID.   |aBALZAC
.USER_NAME.   |aBilly, Balzac
.USER_FIRST_NAME.   |aBalzac
.USER_LAST_NAME.   |aBilly
.USER_PREFERRED_NAME.   |aWilly
.USER_NAME_DSP_PREF.   |a0
.USER_LIBRARY.   |aEPLMNA
.USER_PROFILE.   |aEPL-STAFF
.USER_PREF_LANG.   |aENGLISH
.USER_PIN.   |a64058
.USER_STATUS.   |aOK
.USER_ROUTING_FLAG.   |aY
.USER_CHG_HIST_RULE.   |aALLCHARGES
.USER_LAST_ACTIVITY.   |a20120705
.USER_PRIV_GRANTED.   |a20120615
.USER_PRIV_EXPIRES.   |a20130615
.USER_BIRTH_DATE.   |a20050303
.USER_CATEGORY2.   |aM
.USER_ACCESS.   |aPUBLIC
.USER_ENVIRONMENT.   |aPUBLIC
.USER_MAILINGADDR.   |a1
.USER_ADDR1_BEGIN.
.CITY/STATE. |aEdmonton, AB
.PHONE. |a334-299-4500
.EMAIL. |ailsteam@epl.ca
.USER_ADDR1_END.
.USER_ADDR2_BEGIN.
.USER_ADDR2_END.
.USER_ADDR3_BEGIN.
.EMAIL. |aemail3@epl.ca
.USER_ADDR3_END.
.USER_XINFO_BEGIN.
.NOTIFY_VIA. |aPHONE
.NOTE. |a
.RETRNMAIL. |aYES
.PREV_ID. 789
.PREV_ID2. BALZAC BILLY
.USER_XINFO_END.
  1 $<user> $(1303)
Symphony $<print:u> $<user:u> $<finished_on> $<thursday:u>, $<july:u> 12, 2012, 12:48 PM

now for the note field:
cat edit.in | edituserved -b -eNOTE -l"ADMIN|PCGUI-DISP" -tx
where edit.in is:
21221012345678|This is a note test.|

BEFORE:
bash-3.00$ echo 301585 |  dumpflatuser
Symphony $<print:u> $<user:u> 3.4 $<started_on> $<thursday:u>, $<july:u> 12, 2012, 2:02 PM
$(1228)
$(11553)
*** DOCUMENT BOUNDARY ***
.USER_ID.   |a21221012345678
.USER_GROUP_ID.   |aBALZAC
.USER_NAME.   |aBilly, Balzac
.USER_FIRST_NAME.   |aBalzac
.USER_LAST_NAME.   |aBilly
.USER_PREFERRED_NAME.   |aWilly
.USER_NAME_DSP_PREF.   |a0
.USER_LIBRARY.   |aEPLMNA
.USER_PROFILE.   |aEPL-STAFF
.USER_PREF_LANG.   |aENGLISH
.USER_PIN.   |a64058
.USER_STATUS.   |aOK
.USER_ROUTING_FLAG.   |aY
.USER_CHG_HIST_RULE.   |aALLCHARGES
.USER_LAST_ACTIVITY.   |a20120705
.USER_PRIV_GRANTED.   |a20120615
.USER_PRIV_EXPIRES.   |a20130615
.USER_BIRTH_DATE.   |a20050303
.USER_CATEGORY2.   |aM
.USER_ACCESS.   |aPUBLIC
.USER_ENVIRONMENT.   |aPUBLIC
.USER_MAILINGADDR.   |a1
.USER_ADDR1_BEGIN.
.CITY/STATE. |aEdmonton, AB
.PHONE. |a334-299-4500
.EMAIL. |ailsteam@epl.ca
.USER_ADDR1_END.
.USER_ADDR2_BEGIN.
.USER_ADDR2_END.
.USER_ADDR3_BEGIN.
.EMAIL. |aemail3@epl.ca
.USER_ADDR3_END.
.USER_XINFO_BEGIN.
.NOTIFY_VIA. |aPHONE
.NOTE. |a
.RETRNMAIL. |aYES
.PREV_ID. 789
.PREV_ID2. BALZAC BILLY
.USER_XINFO_END.
  1 $<user> $(1303)
Symphony $<print:u> $<user:u> $<finished_on> $<thursday:u>, $<july:u> 12, 2012, 2:02 PM


AFTER:
bash-3.00$ echo 301585 | dumpflatuser
Symphony $<print:u> $<user:u> 3.4 $<started_on> $<thursday:u>, $<july:u> 12, 2012, 2:08 PM
$(1228)
$(11553)
*** DOCUMENT BOUNDARY ***
.USER_ID.   |a21221012345678
.USER_GROUP_ID.   |aBALZAC
.USER_NAME.   |aBilly, Balzac
.USER_FIRST_NAME.   |aBalzac
.USER_LAST_NAME.   |aBilly
.USER_PREFERRED_NAME.   |aWilly
.USER_NAME_DSP_PREF.   |a0
.USER_LIBRARY.   |aEPLMNA
.USER_PROFILE.   |aEPL-STAFF
.USER_PREF_LANG.   |aENGLISH
.USER_PIN.   |a64058
.USER_STATUS.   |aOK
.USER_ROUTING_FLAG.   |aY
.USER_CHG_HIST_RULE.   |aALLCHARGES
.USER_LAST_ACTIVITY.   |a20120705
.USER_PRIV_GRANTED.   |a20120615
.USER_PRIV_EXPIRES.   |a20130615
.USER_BIRTH_DATE.   |a20050303
.USER_CATEGORY2.   |aM
.USER_ACCESS.   |aPUBLIC
.USER_ENVIRONMENT.   |aPUBLIC
.USER_MAILINGADDR.   |a1
.USER_ADDR1_BEGIN.
.CITY/STATE. |aEdmonton, AB
.PHONE. |a334-299-4500
.EMAIL. |ailsteam@epl.ca
.USER_ADDR1_END.
.USER_ADDR2_BEGIN.
.USER_ADDR2_END.
.USER_ADDR3_BEGIN.
.EMAIL. |aemail3@epl.ca
.USER_ADDR3_END.
.USER_XINFO_BEGIN.
.NOTIFY_VIA. |aPHONE
.NOTE. |aThis is a note test.
.RETRNMAIL. |aYES
.PREV_ID. 789
.PREV_ID2. BALZAC BILLY
.USER_XINFO_END.
  1 $<user> $(1303)
Symphony $<print:u> $<user:u> $<finished_on> $<thursday:u>, $<july:u> 12, 2012, 2:08 PM





















bash-3.00$ echo "jordyn@artktecture.ca {EMAIL}"|selusertext|seluser -iU -oUBDwV.9998.V.9007.
Symphony $<text> $<selection> 3.4 $<started_on> $<thursday:u>, $<july:u> 12, 2012, 2:34 PM
$(3091)USER.
$(3090)
$(1238)
$(3093)
20120712143449 BRS/Search-Engine v.62 started for selutext1
Symphony $<user> $<selection> 3.4 $<started_on> $<thursday:u>, $<july:u> 12, 2012, 2:34 PM
$(1228)
$(1238)
$(1502)
$(1503)
$(1531)
$(1209)9998 $(1230)
$(1209)9007 $(1230)
  1 records found for #2: JORDYN SAME ARTKTECTURE SAME CA.EMAIL.
  1 $<search> $(1308)
  1 $<search> $(1309)
Symphony $<text> $<selection> $<finished_on> $<thursday:u>, $<july:u> 12, 2012, 2:34 PM
214490|21221018146347|Reed, Jordyn|mollymegan||jordyn@artktecture.ca|
  1 $<user> $(1308)
  1 $<user> $(1309)
Symphony $<user> $<selection> $<finished_on> $<thursday:u>, $<july:u> 12, 2012, 2:34 PM